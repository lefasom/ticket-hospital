# main_app.py
import sys
import datetime
from PyQt5 import QtWidgets
from PyQt5.QtWidgets import QMessageBox, QMainWindow
# Importa la clase de la UI generada
from PDCimpresora import Ui_MainWindow
# Importar el m√≥dulo de ID de hardware con protecci√≥n
from hardware_id import get_unique_hardware_id, get_hardware_info, verify_authorized_hardware

class MyMainWindow(QMainWindow):
    def __init__(self):
        super().__init__()
        
        # VERIFICACI√ìN CR√çTICA: Comprobar hardware autorizado ANTES de inicializar UI
        try:
            is_authorized, message = verify_authorized_hardware()
            if not is_authorized:
                self.show_unauthorized_access(message)
                sys.exit(1)  # Cerrar aplicaci√≥n inmediatamente
            
            # Si llegamos aqu√≠, el hardware est√° autorizado
            self.hardware_id = get_unique_hardware_id()
            
        except Exception as e:
            self.show_critical_error(str(e))
            sys.exit(1)  # Cerrar aplicaci√≥n inmediatamente
        
        # Solo si pasa la verificaci√≥n, inicializar la UI
        self.ui = Ui_MainWindow()
        self.ui.setupUi(self) # Configura la UI en esta ventana principal
        
        # Mostrar informaci√≥n de autorizaci√≥n en la barra de t√≠tulo
        self.setWindowTitle(f"PDC Impresora [AUTORIZADO] - ID: {self.hardware_id[:8]}...")
        
        # Conectar se√±ales (botones, etc.)
        self.ui.btnImprimir.clicked.connect(self.guardar_datos_en_txt)
    
    def show_unauthorized_access(self, message):
        """Muestra mensaje de acceso no autorizado"""
        app = QtWidgets.QApplication.instance()
        if app is None:
            app = QtWidgets.QApplication(sys.argv)
        
        msg = QMessageBox()
        msg.setIcon(QMessageBox.Critical)
        msg.setWindowTitle("ACCESO DENEGADO")
        msg.setText("üö´ APLICACI√ìN NO AUTORIZADA")
        msg.setInformativeText(f"""Esta aplicaci√≥n solo puede ejecutarse en la computadora donde fue compilada.

Motivo: {message}

Para usar en esta computadora:
1. Obtenga el c√≥digo fuente
2. Compile el ejecutable en ESTA m√°quina
3. Use el ejecutable generado localmente

ACCESO DENEGADO POR SEGURIDAD.""")
        msg.setStandardButtons(QMessageBox.Ok)
        msg.exec_()
    
    def show_critical_error(self, error_message):
        """Muestra mensaje de error cr√≠tico"""
        app = QtWidgets.QApplication.instance()
        if app is None:
            app = QtWidgets.QApplication(sys.argv)
        
        msg = QMessageBox()
        msg.setIcon(QMessageBox.Critical)
        msg.setWindowTitle("ERROR CR√çTICO")
        msg.setText("‚ö†Ô∏è ERROR DE SISTEMA")
        msg.setInformativeText(f"""Error cr√≠tico en verificaci√≥n de hardware:

{error_message}

La aplicaci√≥n se cerrar√° por seguridad.""")
        msg.setStandardButtons(QMessageBox.Ok)
        msg.exec_()
    
    def get_hardware_summary(self):
        """Obtiene un resumen de la informaci√≥n de hardware para logging"""
        try:
            hw_info = get_hardware_info()
            return {
                'hardware_id': hw_info['hardware_id'],
                'platform': hw_info['system_info'].get('platform', 'Unknown'),
                'machine': hw_info['system_info'].get('machine', 'Unknown'),
                'generated_at': hw_info.get('generated_at', 'Unknown')
            }
        except:
            return {
                'hardware_id': self.hardware_id,
                'platform': 'Unknown',
                'machine': 'Unknown',
                'generated_at': 'Unknown'
            }

    def guardar_datos_en_txt(self):
        """
        Funci√≥n para leer los datos de los QLineEdit y guardarlos en un archivo TXT.
        Incluye verificaci√≥n de seguridad y el ID √∫nico de hardware autorizado.
        """
        # Verificaci√≥n adicional de seguridad antes de cada operaci√≥n cr√≠tica
        try:
            is_authorized, message = verify_authorized_hardware()
            if not is_authorized:
                QMessageBox.critical(self, "VIOLACI√ìN DE SEGURIDAD", 
                                   f"Hardware no autorizado detectado: {message}\n\nLa aplicaci√≥n se cerrar√°.")
                sys.exit(1)
        except Exception as e:
            QMessageBox.critical(self, "ERROR DE SEGURIDAD", f"Error en verificaci√≥n: {e}")
            sys.exit(1)
        
        nombre_paciente = self.ui.txtNombrePaciente.text()
        dni_paciente = self.ui.txtDniPaciente.text()
        nacimiento_paciente = self.ui.txtNacimiento.text()
        nombre_hospital = self.ui.txtNombreHospital.text()
        dimension_impresion = self.ui.boxDimensionesImpresion.currentText()

        # Validar que los campos no est√©n vac√≠os
        if not nombre_paciente or not dni_paciente or not nacimiento_paciente or not nombre_hospital:
            QMessageBox.warning(self, "Campos Vac√≠os", "Por favor, complete todos los campos antes de imprimir.")
            return

        nombre_archivo = "registro_impresiones.txt"
        timestamp = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        
        # Obtener informaci√≥n de hardware para el registro
        hw_summary = self.get_hardware_summary()
        
        # Crear l√≠nea de datos con informaci√≥n de hardware AUTORIZADO
        linea_datos = f"""[{timestamp}] - Hardware AUTORIZADO ID: {hw_summary['hardware_id']}
Hospital: {nombre_hospital}
=>
Paciente: {nombre_paciente}
DNI: {dni_paciente}
Nacimiento: {nacimiento_paciente}
Tipo de ticket: {dimension_impresion}
Sistema: {hw_summary['platform']} ({hw_summary['machine']})
Estado: ‚úì HARDWARE VERIFICADO Y AUTORIZADO
ID Hardware generado: {hw_summary['generated_at']}
{'='*70}

"""

        try:
            with open(nombre_archivo, 'a', encoding='utf-8') as f:
                f.write(linea_datos)

            # Mostrar mensaje de √©xito con informaci√≥n de seguridad
            mensaje_exito = f"""‚úì Datos guardados correctamente en '{nombre_archivo}'.

üîí SISTEMA SEGURO ACTIVO
Hardware ID Autorizado: {self.hardware_id[:16]}...
Registro √∫nico para esta m√°quina autorizada."""

            QMessageBox.information(self, "‚úì √âxito - Sistema Autorizado", mensaje_exito)

            # Limpiar los campos despu√©s de guardar
            self.ui.txtNombrePaciente.clear()
            self.ui.txtDniPaciente.clear()
            self.ui.txtNacimiento.clear()
            self.ui.txtNombreHospital.clear()

        except Exception as e:
            QMessageBox.critical(self, "Error al Guardar", f"No se pudo guardar el archivo: {e}")
    
    def mostrar_info_seguridad(self):
        """
        Funci√≥n para mostrar informaci√≥n de seguridad y hardware autorizado
        """
        try:
            hw_info = get_hardware_info()
            
            info_text = f"""üîí SISTEMA DE SEGURIDAD ACTIVO

=== INFORMACI√ìN DE AUTORIZACI√ìN ===
‚úì Hardware ID Autorizado: {hw_info['hardware_id']}
‚úì Generado: {hw_info['generated_at']}
‚úì Estado: ACCESO PERMITIDO

=== COMPONENTES VERIFICADOS ===
CPU ID: {hw_info['components'].get('cpu_id', 'N/A')}
Placa Madre: {hw_info['components'].get('motherboard_serial', 'N/A')}
Disco: {hw_info['components'].get('disk_serial', 'N/A')}
MAC: {hw_info['components'].get('mac_address', 'N/A')}

=== SISTEMA AUTORIZADO ===
Plataforma: {hw_info['system_info'].get('platform', 'N/A')}
Procesador: {hw_info['system_info'].get('processor', 'N/A')}
M√°quina: {hw_info['system_info'].get('machine', 'N/A')}
Nodo: {hw_info['system_info'].get('node', 'N/A')}

‚ö†Ô∏è  ADVERTENCIA DE SEGURIDAD:
Esta aplicaci√≥n SOLO funciona en la computadora donde fue compilada.
Cualquier intento de uso en otra m√°quina ser√° bloqueado."""

            QMessageBox.information(self, "üîí Informaci√≥n de Seguridad", info_text)
            
        except Exception as e:
            QMessageBox.critical(self, "Error de Seguridad", f"Error al obtener informaci√≥n de seguridad: {e}")

# Esto es lo que se ejecuta cuando corres este script
if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    
    try:
        window = MyMainWindow()
        
        # Mostrar informaci√≥n de hardware autorizado al iniciar
        print(f"üîí Aplicaci√≥n AUTORIZADA iniciada con Hardware ID: {window.hardware_id}")
        print("‚úì Sistema de seguridad activo")
        
        window.show()
        sys.exit(app.exec_())
        
    except SystemExit:
        # Salida controlada por falta de autorizaci√≥n
        pass
    except Exception as e:
        print(f"Error cr√≠tico al inicializar: {e}")
        sys.exit(1)